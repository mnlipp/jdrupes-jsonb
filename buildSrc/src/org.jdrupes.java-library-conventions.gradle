/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the common convention plugin for shared build configuration between library and application projects.
    id 'org.jdrupes.java-common-conventions'

    // Apply the common convention plugin for shared build configuration between library and application projects.
    id 'org.jdrupes.java-doc-conventions'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    
    // Add publishing information
    id 'maven-publish'
    id 'signing'
    
    // Create OSGi info
    id 'biz.aQute.bnd.builder'
}

// Additional jars for publishing

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

task javadocJar(type: Jar) {
    dependsOn "apidocs"
    from apidocs.destinationDir
    archiveClassifier = "javadoc"
}

publishing {
    publications {
        maven(MavenPublication) {
            def pub = it
            from components.java
            artifact sourcesJar            
            artifact javadocJar            
  
            project.afterEvaluate {
                pub.setArtifactId(base.archivesName.get())
                pom {
                    name = tasks.jar.manifest.attributes['Bundle-Name']
                    description = tasks.jar.manifest.attributes['Bundle-Description']
                    url = tasks.jar.manifest.attributes['Bundle-DocURL']
                    licenses {
                        license {
                            url = tasks.jar.manifest.attributes['Bundle-License']
                        }
                    }
                    developers {
                        developer {
                            id = 'mnlipp'
                            name = 'Michael N. Lipp'
                            email = 'mnl@mnl.de'
                        }
                    }
                    scm {
                        url = 'https://github.com/mnlipp/jdrupes-jsonb'
                        connection = 'scm:git:https://github.com/mnlipp/jdrupes-jsonb.git'
                        developerConnection = 'scm:git:git@github.com:mnlipp/jdrupes-jsonb.git'
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

jar {
    afterEvaluate {
        into("META-INF/maven/$project.group/${base.archivesName.get()}") {
            from { generatePomFileForMavenPublication }
            rename ".*", "pom.xml"
        }
    }
}
